---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default
data:
  mongo-init.sh: |
    set -e
    mongosh 'mongodb://root:example@localhost:27017'<<EOF
      db = db.getSiblingDB('prtdatabase')
      db.createUser(
        { 
          user : 'prtuser', 
          pwd :  'pass123',
          roles : [{ role: 'readWrite', db: 'prtdatabase'}, { role: 'root', db: 'admin' }]
        }
      );
      db.createCollection("users")
      db.createCollection("cars")
      db.createCollection("dataPoints")
    
      users = db.getCollection("users")
      cars = db.getCollection("cars")
      data_points = db.getCollection("dataPoints")
    
      users.insert({
        firstName: 'Marissa',
        lastName: 'Wahler',
        username: 'marissa-user',
        password: 'password123',
        createdAt: new Date()
      })
      cars.insert({
        serialNumber: '0000000000000000'
      })
      data_points.insert({
        temperature: 0,
        carId: new ObjectId('000000000000000000000000'),
        current: 0,
        location: {
          type: "Point",
          coordinates: [0, 0]
        },
        timestamp: new Date()
      })
    EOF
---

apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  type: NodePort # Uncomment for external service
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
      nodePort: 30017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  selector:
    matchLabels:
      app: mongodb
  replicas: 1
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          volumeMounts:
            - name: config-volume
              mountPath: /docker-entrypoint-initdb.d/mongo-init.sh
              subPath: mongo-init.sh
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: example
      volumes:
        - name: config-volume
          configMap:
            name: mongo-config
---

apiVersion: v1
kind: Service
metadata:
  name: prt-server-service
spec:
  type: NodePort
  selector:
    app: prt-server-application
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30080 # Specify your desired node port here
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prt-server-deployment
spec:
  selector:
    matchLabels:
      app: prt-server-application
  replicas: 1
  template:
    metadata:
      labels:
        app: prt-server-application
    spec:
      containers:
        - name: prt-server-application
          image: com.mwahler/prtserver:0.0.1
          ports:
            - containerPort: 8080
          env:
            - name: MONGODB_URI
              value: mongodb://mongodb-service:27017/
            - name: MONGODB_ADMINUSERNAME
              value: prtuser
            - name: MONGODB_ADMINPASSWORD
              value: pass123
            - name: MONGODB_DATABASE
              value: prtdatabase

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-express-deployment
  labels:
    app: mongodb-express
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-express
  template:
    metadata:
      labels:
        app: mongodb-express
    spec:
      containers:
        - name: mongodb-express
          image: mongo-express
          ports:
            - containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_URL
              value: mongodb://prtuser:pass123@mongodb-service:27017/prtdatabase?ssl=false
            - name: ME_CONFIG_MONGODB_ENABLE_ADMIN
              value: "true"
---

apiVersion: v1
kind: Service
metadata:
  name: mongodb-express-service
spec:
  selector:
    app: mongodb-express
  type: NodePort # Uncomment for external service
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30081 # Uncomment for external service